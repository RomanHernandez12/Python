# -*- coding: utf-8 -*-
"""JobAppHueristics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yWrGpkJc59z-Krc1AHsT22Cxu9iJe0kL
"""

import pandas as pd

df = pd.read_csv("/content/applicant-data.csv")

df = df.rename(columns ={
    "0" : "University",
    "Other" : "Major",
    "2.457654033" : "GPA",
    "633" : "SAT",
    "Hispanic/Latinx" : "Race",
    "Female" : "Gender"
})
df

#Major: CS, Engineering, Math/STAT | if not Other
#University: if top 20 University 0 | if not 1

#Designing Heuristic
def calculate_heuristic_value(applicant_data):
  running_score = 0
  majors = ["CS", "Math/Stat", "Engineering"]
  if applicant_data[0] == 0:
    running_score += 4
  else:
    running_score += 2

  if applicant_data[1] in majors:
    running_score += 4
  else:
    running_score += 2
  
  running_score += float(applicant_data[2])

  running_score += float(applicant_data[3]) / 400

  return running_score

compare = df.iloc[-1, :]
print([compare[0], compare[1], compare[2], compare[3], compare[4], compare[5]])



vals = []
for i in range(8535):
    lister = list(df.iloc[i, 0:4])
    vals.append((calculate_heuristic_value(lister), i))

vals.sort(reverse=True)

top_cans = vals[:250]

print(top_cans)

top20_bool = df["University"] == 0
top20_view = df[top20_bool]

print(len(top20_view) / len(df))

major_dic = {
    
}

majors = set(df["Major"])

for major in majors:
  bool_major = df["Major"] == major
  view_major = df[bool_major]
  major_dic[major] = len(view_major) / len(df)

print(major_dic)

female_bool = df["Gender"] == "Female"
female_view = df[female_bool]

male_bool = df["Gender"] == "Male"
male_view = df[male_bool]

print(len(female_view) / len(df))
print(len(male_view) / len(df))
  
#races

races = set(df["Race"])

races_dic = {
    
}

for race in races:
  bool_race = df["Race"] == race
  view_race = df[bool_race]
  races_dic[race] = len(view_race) / len(df)

print(races_dic)

#Avg sat

print(sum(df["SAT"]) / len(df))

#Avg gpa

print(sum(df["GPA"]) / len(df))